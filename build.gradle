buildscript {
  repositories {
    maven {
      url "https://oss.sonatype.org"
    }
    mavenCentral()
  }
}

plugins {
  id 'java'
  id 'idea'
  id 'eclipse'
  id "com.google.protobuf" version "0.9.4"
}

repositories {
  mavenLocal()
  mavenCentral()
}

group 'org.wiremock.demo'
version = "1.0.0"

allprojects {
  sourceCompatibility = 17
  targetCompatibility = 17

  ext {
    versions = [
        wiremock    : "3.2.0",
        wiremockGrpc: "0.2.0",
        grpc        : "1.58.0",
        jackson     : '2.15.3'
    ]
  }
}

dependencies {
  implementation "io.grpc:grpc-bom:$versions.grpc"
  implementation "io.grpc:grpc-protobuf:$versions.grpc"
  implementation "io.grpc:grpc-stub:$versions.grpc"

  implementation platform("com.fasterxml.jackson:jackson-bom:$versions.jackson")
  implementation "com.fasterxml.jackson.core:jackson-core",
      "com.fasterxml.jackson.core:jackson-annotations",
      "com.fasterxml.jackson.core:jackson-databind"

  implementation 'javax.annotation:javax.annotation-api:1.3.2'

  implementation 'io.javalin:javalin:5.6.3'
  implementation 'com.squareup.okhttp:okhttp:2.7.5'
  implementation 'io.github.resilience4j:resilience4j-retry:2.1.0'

  implementation "org.slf4j:slf4j-simple:2.0.7"

  testImplementation "org.wiremock:wiremock:$versions.wiremock"
  testImplementation "org.wiremock:wiremock-grpc-extension:$versions.wiremockGrpc"
  testImplementation(platform('org.junit:junit-bom:5.10.0'))
  testImplementation "org.junit.jupiter:junit-jupiter"
  testImplementation "org.hamcrest:hamcrest-core:2.2"
  testImplementation "org.hamcrest:hamcrest-library:2.2"
  testImplementation 'org.awaitility:awaitility:4.2.0'
  testImplementation "io.grpc:grpc-okhttp:$versions.grpc"
  testImplementation 'io.rest-assured:rest-assured:5.3.2'
}

protobuf {
  protoc {
    artifact = "com.google.protobuf:protoc:3.24.3"
  }

  plugins {
    grpc {
      artifact = "io.grpc:protoc-gen-grpc-java:$versions.grpc"
    }
  }
  generateProtoTasks {
    all()*.plugins {
      grpc {
        outputSubDir = 'java'
      }
    }

    all().each { task ->
      task.generateDescriptorSet = true
      task.descriptorSetOptions.path = "$projectDir/src/test/resources/wiremock/grpc/services.dsc"
    }
  }
}

processTestResources.dependsOn generateProto
processTestResources.dependsOn generateTestProto

test {
  testLogging {
    events "PASSED", "FAILED", "SKIPPED"
    exceptionFormat "full"
  }

  useJUnitPlatform()
}

wrapper {
  gradleVersion = '8.3'
  distributionType = Wrapper.DistributionType.BIN
}